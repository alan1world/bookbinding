#! /usr/bin/env python3
# -*- coding: utf-8 -*-

'''This needs to (1) clean all the line endings, (2) replace the regular words, (3) correct the gamebook works'''

import re, os

def create_text(myinputfile):
	with open(myinputfile, 'r', encoding='utf-8') as infile:
		mytext = infile.read()
	return mytext
	
def reg_words_replace(mytext):
	p = re.compile('(\W)(h)omed(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2orned\3', mytext)
	p = re.compile('(\W)(h)om(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2orn\3', mytext)
	p = re.compile('(\W)(t)um(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2urn\3', mytext)
	p = re.compile('(\W)(t)om(\W)')
	mytext = p.sub(r'\1\2orn\3', mytext)
	p = re.compile('(\W)(b)um(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2urn\3', mytext)
	p = re.compile('&nbsp_place_holder;', re.IGNORECASE)
	mytext = p.sub(r' ', mytext)
	p = re.compile('(\W)-(\W)', re.MULTILINE)
	mytext = p.sub(r'\1---\2', mytext)
	p = re.compile('(\d)-(\d)', re.MULTILINE)
	mytext = p.sub(r'\1--\2', mytext)
	p = re.compile('\.[\r\n ]*\.[\r\n ]*\.', re.IGNORECASE)
	mytext = p.sub(r'...', mytext)
	p = re.compile('(inten)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(instan)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(recen)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(exac)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(nonchalan)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(curren)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(abrup)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(quie)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(bat)de', re.IGNORECASE)
	mytext = p.sub(r'\1tle', mytext)
	p = re.compile('(bot)de', re.IGNORECASE)
	mytext = p.sub(r'\1tle', mytext)
	p = re.compile('(impatien)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(tigh)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(correc)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(silen)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(curren)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(ligh)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(direc)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(reluctan)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('(obedien)dy', re.IGNORECASE)
	mytext = p.sub(r'\1tly', mytext)
	p = re.compile('fruidess', re.IGNORECASE)
	mytext = p.sub(r'fruitless', mytext)
	p = re.compile('mirade', re.IGNORECASE)
	mytext = p.sub(r'miracle', mytext)
	p = re.compile('gende(man|men)', re.IGNORECASE)
	mytext = p.sub(r'gentle\1', mytext)
	p = re.compile('stormdouds', re.IGNORECASE)
	mytext = p.sub(r'stormclouds', mytext)
	p = re.compile('(\W)(d)oak(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2loak\3', mytext)
	p = re.compile('(\W)corade(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1coracle\2', mytext)
	p = re.compile('(\W)(d)edde(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2ecide\3', mytext)
	p = re.compile('(\W)(y)ou(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2ou\3', mytext)
	p = re.compile('(\W)bieak(\W)')
	mytext = p.sub(r'\1bleak\2', mytext)
	p = re.compile('(\W)(o)nlv(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2nly\3', mytext)
	p = re.compile('(\W)dty(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1city\2', mytext)
	p = re.compile('(\W)Ore(\W)')
	mytext = p.sub(r'\1Orc\2', mytext)
	p = re.compile('(\W)Ores(\W)')
	mytext = p.sub(r'\1Orcs\2', mytext)
	p = re.compile('(\W)(d)edde(\W)', re.IGNORECASE)
	mytext = p.sub(r'\1\2ecide\3', mytext)
	p = re.compile('(\W)come(r|rs)(\W)')
	mytext = p.sub(r'\1corne\2\3', mytext)
	p = re.compile('(\W)lantem(\W)')
	mytext = p.sub(r'\1lantern\2', mytext)
	p = re.compile('(\W)thom(\W)')
	mytext = p.sub(r'\1thorn\2', mytext)
	p = re.compile('(\W)Tou(\W)')
	mytext = p.sub(r"\1'You\2", mytext)
	p = re.compile('/ ')
	mytext = p.sub(r",' ", mytext)
	p = re.compile('â€”')
	mytext = p.sub(r"---", mytext)
	return mytext

def reg_game_replace(mytext):
	p = re.compile('(turn)[\r\n ]*(to)[\r\n ]*(\d+)', re.IGNORECASE)
	mytext = p.sub(r'\1 \2 **\3**', mytext)
	p = re.compile('(t)um[\r\n ]*(to)[\r\n ]*(\d+)', re.IGNORECASE)
	mytext = p.sub(r'\1urn \2 **\3**', mytext)
	p = re.compile('(h)im[\r\n ]*(to)[\r\n ]*(\d+)', re.IGNORECASE)
	mytext = p.sub(r'\1urn \2 **\3**', mytext)
	p = re.compile('\((\d+)\)', re.IGNORECASE)
	mytext = p.sub(r'(**\1**)', mytext)
	p = re.compile('^(\d+)$', re.MULTILINE)
	mytext = p.sub(r'#### \1', mytext)
	p = re.compile('(Testing|Test)[\r\n ]*your[\r\n ]*Luck', re.IGNORECASE)	
	mytext = p.sub(r'*\1 your Luck*', mytext)
	p = re.compile('(Testing|Test)[\r\n ]*your[\r\n ]*Stamina', re.IGNORECASE)	
	mytext = p.sub(r'*\1 your Stamina*', mytext)
	p = re.compile('(Testing|Test)[\r\n ]*your[\r\n ]*Skill', re.IGNORECASE)	
	mytext = p.sub(r'*\1 your Skill*', mytext)
	p = re.compile('Adventure[\r\n ]*Sheet', re.IGNORECASE)	
	mytext = p.sub('*Adventure Sheet*', mytext)
	# p = re.compile('Alarm[\r\n ]*Value', re.IGNORECASE)
	# mytext = p.sub('*Alarm Value*', mytext)
	# p = re.compile('Test[\r\n ]*your[\r\n ]*Resolve', re.IGNORECASE)
	# mytext = p.sub('*Test your Resolve*', mytext)
	# p = re.compile('^SECTION[\r\n ]*(\d+)', re.MULTILINE)
	# mytext = p.sub(r'#### SECTION \1', mytext)
	p = re.compile('Character[\r\n ]*Sheet', re.IGNORECASE)	
	mytext = p.sub('*Character Sheet*', mytext)
	p = re.compile('Initial', re.IGNORECASE)	
	mytext = p.sub(r'*Initial*', mytext)
	p = re.compile(r'\)!\[')	
	mytext = p.sub(r')\n\n![', mytext)
	p = re.compile(r'    !\[')	
	mytext = p.sub(r'![', mytext)
	p = re.compile(r'   !\[')	
	mytext = p.sub(r'![', mytext)
	return mytext

def clean_line_endings(mytext):
	mytext = mytext.replace('\n\n', 'QQQ').replace('\n',' ').replace('QQQ', '\n\n')
	return mytext

def write_out(mytext, myfinalfile):
	with open(myfinalfile, 'w') as myoutfile:
		myoutfile.write(mytext)
	
def main():
	_curr_dir = os.getcwd()
	os.chdir('../3. text review')
	mytext = create_text('out.md')
	mytext = clean_line_endings(mytext)
	mytext = reg_words_replace(mytext)
	# mytext = reg_game_replace(mytext)
	write_out(mytext, 'out1.md')
	os.rename("out.md", "out_original.md")
	os.rename("out1.md", "out.md")
	os.chdir(_curr_dir)

main()
